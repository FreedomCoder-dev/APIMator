package org.walkmod.javalang;

public interface ASTParserConstants {

	int EOF = 0;
	int SINGLE_LINE_COMMENT = 6;
	int JAVA_DOC_COMMENT = 9;
	int MULTI_LINE_COMMENT = 10;
	int ABSTRACT = 12;
	int ASSERT = 13;
	int BOOLEAN = 14;
	int BREAK = 15;
	int BYTE = 16;
	int CASE = 17;
	int CATCH = 18;
	int CHAR = 19;
	int CLASS = 20;
	int CONST = 21;
	int CONTINUE = 22;
	int _DEFAULT = 23;
	int DO = 24;
	int DOUBLE = 25;
	int ELSE = 26;
	int ENUM = 27;
	int EXTENDS = 28;
	int FALSE = 29;
	int FINAL = 30;
	int FINALLY = 31;
	int FLOAT = 32;
	int FOR = 33;
	int GOTO = 34;
	int IF = 35;
	int IMPLEMENTS = 36;
	int IMPORT = 37;
	int INSTANCEOF = 38;
	int INT = 39;
	int INTERFACE = 40;
	int LONG = 41;
	int NATIVE = 42;
	int NEW = 43;
	int NULL = 44;
	int PACKAGE = 45;
	int PRIVATE = 46;
	int PROTECTED = 47;
	int PUBLIC = 48;
	int RETURN = 49;
	int SHORT = 50;
	int STATIC = 51;
	int STRICTFP = 52;
	int SUPER = 53;
	int SWITCH = 54;
	int SYNCHRONIZED = 55;
	int THIS = 56;
	int THROW = 57;
	int THROWS = 58;
	int TRANSIENT = 59;
	int TRUE = 60;
	int TRY = 61;
	int VOID = 62;
	int VOLATILE = 63;
	int WHILE = 64;
	int LONG_LITERAL = 65;
	int INTEGER_LITERAL = 66;
	int DECIMAL_LITERAL = 67;
	int HEX_LITERAL = 68;
	int OCTAL_LITERAL = 69;
	int BINARY_LITERAL = 70;
	int FLOATING_POINT_LITERAL = 71;
	int DECIMAL_FLOATING_POINT_LITERAL = 72;
	int DECIMAL_EXPONENT = 73;
	int HEXADECIMAL_FLOATING_POINT_LITERAL = 74;
	int HEXADECIMAL_EXPONENT = 75;
	int CHARACTER_LITERAL = 76;
	int STRING_LITERAL = 77;
	int IDENTIFIER = 78;
	int LETTER = 79;
	int PART_LETTER = 80;
	int LPAREN = 81;
	int RPAREN = 82;
	int LBRACE = 83;
	int RBRACE = 84;
	int LBRACKET = 85;
	int RBRACKET = 86;
	int SEMICOLON = 87;
	int COMMA = 88;
	int DOT = 89;
	int AT = 90;
	int ASSIGN = 91;
	int LT = 92;
	int BANG = 93;
	int TILDE = 94;
	int HOOK = 95;
	int COLON = 96;
	int EQ = 97;
	int LE = 98;
	int GE = 99;
	int NE = 100;
	int SC_OR = 101;
	int SC_AND = 102;
	int INCR = 103;
	int DECR = 104;
	int PLUS = 105;
	int MINUS = 106;
	int STAR = 107;
	int SLASH = 108;
	int BIT_AND = 109;
	int BIT_OR = 110;
	int XOR = 111;
	int REM = 112;
	int LSHIFT = 113;
	int PLUSASSIGN = 114;
	int MINUSASSIGN = 115;
	int STARASSIGN = 116;
	int SLASHASSIGN = 117;
	int ANDASSIGN = 118;
	int ORASSIGN = 119;
	int XORASSIGN = 120;
	int REMASSIGN = 121;
	int LSHIFTASSIGN = 122;
	int RSIGNEDSHIFTASSIGN = 123;
	int RUNSIGNEDSHIFTASSIGN = 124;
	int ELLIPSIS = 125;
	int ARROW = 126;
	int DOUBLECOLON = 127;
	int RUNSIGNEDSHIFT = 128;
	int RSIGNEDSHIFT = 129;
	int GT = 130;

	int DEFAULT = 0;
	int IN_JAVA_DOC_COMMENT = 1;
	int IN_MULTI_LINE_COMMENT = 2;

	String[] tokenImage = { "<EOF>", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "\"\\f\"", "<SINGLE_LINE_COMMENT>", "<token of kind 7>", "\"/*\"", "\"*/\"", "\"*/\"", "<token of kind 11>", "\"abstract\"", "\"assert\"", "\"boolean\"", "\"break\"", "\"byte\"", "\"case\"", "\"catch\"", "\"char\"", "\"class\"", "\"const\"", "\"continue\"", "\"default\"", "\"do\"", "\"double\"", "\"else\"", "\"enum\"", "\"extends\"", "\"false\"", "\"final\"", "\"finally\"", "\"float\"", "\"for\"", "\"goto\"", "\"if\"", "\"implements\"", "\"import\"", "\"instanceof\"", "\"int\"", "\"interface\"", "\"long\"", "\"native\"", "\"new\"", "\"null\"", "\"package\"", "\"private\"", "\"protected\"", "\"public\"", "\"return\"", "\"short\"", "\"static\"", "\"strictfp\"", "\"super\"", "\"switch\"", "\"synchronized\"", "\"this\"", "\"throw\"", "\"throws\"", "\"transient\"", "\"true\"", "\"try\"", "\"void\"", "\"volatile\"", "\"while\"", "<LONG_LITERAL>", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "<BINARY_LITERAL>", "<FLOATING_POINT_LITERAL>", "<DECIMAL_FLOATING_POINT_LITERAL>", "<DECIMAL_EXPONENT>", "<HEXADECIMAL_FLOATING_POINT_LITERAL>", "<HEXADECIMAL_EXPONENT>", "<CHARACTER_LITERAL>", "<STRING_LITERAL>", "<IDENTIFIER>", "<LETTER>", "<PART_LETTER>", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"@\"", "\"=\"", "\"<\"", "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"==\"", "\"<=\"", "\">=\"", "\"!=\"", "\"||\"", "\"&&\"", "\"++\"", "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"%\"", "\"<<\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"", "\">>=\"", "\">>>=\"", "\"...\"", "\"->\"", "\"::\"", "\">>>\"", "\">>\"", "\">\"", "\"\\u001a\"", "\"<>\"" };

}
